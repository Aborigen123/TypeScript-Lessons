{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;AACb;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF,mEAAmE;AACnE;AACA;;AAEA,eAAe;;AAEf;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C;;AAE/C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;AAC9B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC,uCAAuC;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wFAAwF;AACxF;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,wBAAwB;AAClC;AACA;AACA;AACA,WAAW,4CAA4C,IAAI;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,0DAA0D;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,sFAAsF;;AAEnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,eAAe;AACf;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;;;AAGlB,4CAA4C;AAC5C;AACA;;AAEA,WAAW;AACX,cAAc;;AAEd;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iDAAiD;AACjD;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iDAAiD;AACjD;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc,QAAQ,KAAK,cAAc;AAC1E;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA,4DAA4D,KAAK,cAAc;AAC/E;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,wCAAwC;AACxC;AACA;;AAEA;AACA;AACA;AACA,mDAAmD;;AAEnD;;AAEA;;AAEA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qDAAqD,OAAO,KAAK;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe;;AAEf,kDAAkD;AAClD;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,2CAA2C,m1D","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","\"use strict\";\r\n//tsc -w включити компілятор\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//ТИПИ ДАНИХ\r\n//string\r\n/*let str  = 'string!';\r\n//відмінність ts від js в тому як що я захочу занести в змінну іншого типу н-д str = 10; то компілятор погчне видавати error.\r\n//тому що не можна міняти типи дани а якщо ввнести н-д str = 'qwe'; то помилки не буде\r\n//str = 10 //error\r\nstr = 'qwe'//work\r\n\r\n//let variable; -  змінній буде присвоєно any\r\n\r\nlet str1: string = 'string!' //явне присвоєння типу змінної\r\n\r\n//number\r\nlet num = 10;\r\nlet num1: number  = 10;\r\n\r\n//boolean\r\n\r\nlet inTrue = true\r\nlet isFasle:boolean = false\r\n\r\ninTrue = false // не можемо присвоїти 1 або 0 (true false)\r\n\r\n//зміна типів змінної (convertation)\r\nlet unknow = '1';\r\n//unknow = 1;//error\r\n\r\n// 1 спосіб any - ми можемо запхати будь який тип даних\r\nlet unknowAny: any = '1';\r\nunknowAny = 1;\r\nunknowAny = true//all work\r\n\r\n// 2 спосіб перечислення типів які може прийняти змінна\r\n\r\nlet  unknowEnum: string | number = 'qewwq'\r\nunknowEnum = 1\r\n*/\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//ТИПИ МАСИВІВ | МАСИВИ\r\n/*let numArray = [1,2,3];\r\nlet numArrayType: number[] = [1,2,3];\r\nlet numArray1: Array<number> = [1,2,3];\r\n\r\n\r\nlet strArray = ['1', '2', '3'];\r\nlet strArrayType: string[] = ['1', '2', '3'];\r\nlet strArray1:Array<string>  = ['1', '2', '3'];\r\n\r\nlet boolArray = [true, false]\r\nlet boolArrayType: boolean[] = [true, false]\r\nlet boolArray1: Array<boolean> = [true, false]\r\n\r\n//tuples\r\nlet array: [number, number,string] = [1,2,'3']; // сталась ситуація що ми хочемо добавити до масиву string\r\n\r\nlet array2: [boolean, string, number] = [true,'str', 22]\r\n\r\n//let array3: Array<number, string> = [1, 'str'] // error так записувати не можна\r\n\r\n*/\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//Функції\r\n//вказування в кінці функці н-д :void :string не є обовязковим це потрібно вказувати для читабельності\r\n/*const myName: string = 'WFM'\r\nconst  myAge = 50;\r\n\r\nfunction getMyName(): string { //string - тип який вертає функція\r\n    return myName\r\n}\r\n\r\nconsole.log(getMyName())\r\n\r\nfunction getMyAge(): number {\r\n    return myAge\r\n}\r\nconsole.log(getMyAge())\r\n\r\n//function getParam(age): number {//work\r\nfunction getParam(age:number): number {// work\r\n    return age\r\n}\r\nconsole.log(getParam(40))//work out 40\r\n\r\nfunction getParamwithPrefix(age:number, prefix:string): string {\r\n    return  prefix + age;\r\n}\r\nconsole.log(getParamwithPrefix(40, 'wew'))\r\n\r\nfunction getParamwithDefaultValue(age:number, prefix:string = 'default value'): string {//default value\r\n    return  prefix + age;\r\n}\r\nconsole.log(getParamwithDefaultValue(40))\r\n\r\nfunction consoleLog( str:string ):void {//void - нічого не вертає (хорошою практикою є це вказувати)\r\n    console.log()\r\n}\r\nconsoleLog('sew')\r\n\r\n\r\nfunction sum(num1:number, num2:number):number {\r\n    return num1 + num2;\r\n}\r\n\r\nconsole.log(sum(5,10))\r\n\r\nlet mySum;\r\n\r\nmySum = sum\r\nconsole.log(sum(10,15))\r\n\r\n//короткий запис\r\nlet mySum2: (num1:number, num2:number) => number; // => number - повернення типу\r\nmySum2 = sum\r\nconsole.log(mySum2(1,32))\r\n*/\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//Обєкти\r\n/*\r\nlet user:{name:string, age:number} = {\r\n  name:'WFM',\r\n  age:50\r\n};\r\nlet user2:{name:string, age:number, logName:() => void} = {//logName:() => void - logName:()  -це функція => void - нічого не вертає\r\n    name:'WFM',\r\n    age:50,\r\n    logName():void{\r\n        console.log(this.name)\r\n    }\r\n};\r\n\r\nlet user3:{name:string, age:number, logName:() => void,jobs:string[]} = {\r\n    name:'Max',\r\n    age: 30,\r\n    jobs: ['2'],\r\n    logName(): void {\r\n        console.log(this.name)\r\n    }\r\n}\r\n//щоб не писати таку довгу стрічку ми напишемо свою констрекцію яка буде створювати свій тип\r\n\r\ntype User = {name:string, age:number, logName?:() => void, jobs:string[] , getJobs?:() => string[]} //getJobs?:() => string[]  - де ? - вказує що поле є необовязковим\r\n\r\nlet user4: User = {\r\n    name:'Max',\r\n    age: 30,\r\n    jobs: ['2'],\r\n    logName(): void {\r\n        console.log(this.name)\r\n    }\r\n}\r\n\r\n\r\nlet user5: User = {\r\n    name:'Max',\r\n    age: 30,\r\n    jobs: ['2'],\r\n    getJobs(): string[] {\r\n        return this.jobs;\r\n    }\r\n}\r\n*/\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//Компілятор і конфігурації\r\n/*\r\n// Компілятор як працює в ts.   ts - це MBM model коли ми пишемо команду tsc (file.ts) спочатку компілятор дивиться в корінь нашого проекту\r\n//і знаходить tsconfig.json який зчитує і приймає всі конфіги ||| цікавий факт все що закоментовано в tsconfig.json має значення false і воно є робочим просто знак // присвоює йому false\r\n\r\n//    \"target\": \"es5\", - у нас спочатку компілюється ts в es6(вона обгортка для es5) а після цього воно компілюється в es5 (тому що більшість браузерів підтримуються es5)\r\n//   \"sourceMap\": true, - коли білдиться ts файл він перебілджується в .js де лінійки не відповідають одна одній якщо винекне якась помилка то в ts буде відображатися помилка не в тому місці\r\n//тому що номера лінійок не відповідні | якщо розкоментувати цю лінійку то нам буде показувати еrror не в js а в ts | для того щоб збілдити tsconfig.json треба прописати команду tsc\r\n\r\n//\"noEmitOnError\" : false (її немав в базовому файлі tsconfig.json) - якщо застосувати цю функцію і при помилці зкомпілювати tsc file.js то воно збільдиться і запуститься файл але напише що була помилка при білджені\r\n\r\n//let variable; -  змінній буде присвоєно any\r\nconst user:User = {\r\n    name: 'WFM',\r\n    age:20\r\n}\r\ntype User = {name:string, age: number}\r\n\r\nfunction logUser(user:User):void {\r\n    console.log(user.name + ' ' + user.age)\r\n}\r\n\r\nlogUser(user)*/\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//Спеціальні типи enum,\r\n/*\r\nenum Job{\r\n  Frontend,\r\n  Backend,\r\n  Designer\r\n}\r\nconst job: Job = Job.Backend;\r\nconsole.log(job);// Виведе 1\r\n\r\nenum Job1{\r\n    Frontend,\r\n    Backend=50,\r\n    Designer\r\n}\r\nconst job1: Job1 = Job1.Backend;\r\nconsole.log(job1);// Виведе 50\r\nconst job2: Job1 = Job1.Designer;\r\nconsole.log(job2);//51\r\n\r\n\r\nfunction throwNewError(err: string): never {//функції які нічого не вертають а тільки викидають помилки\r\n    throw  new Error(err);\r\n}\r\n\r\nlet newVar;//newVar - any і має в собі значення undefined\r\nnewVar = null;//присвоюємо undefined і в кінцевому результаті буде undefined\r\n\r\nlet myNumber = 20;\r\n//myNumber = null; //виведе помилку бо ми не можемо присвоїти null типу number\r\n//вирішення\r\nlet myNumber1: number|null = 20;\r\nmyNumber1 = null;\r\n*/\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//Класи\r\n// constructor - являється функцією\r\n/*\r\nclass User{\r\n    name: string; //public\r\n   private isTeacher: boolean;\r\n   protected age: number = 30;\r\n   public job:string;\r\n\r\n //   constructor(name:string) {\r\n  //      this.name = name;\r\n  //  }\r\n\r\n    constructor(name:string, public job:string) { // public  job:string ==  this.job = job;\r\n        this.name = name;\r\n\r\n    }\r\n\r\n    getAge():number{\r\n        return this.age;\r\n    }\r\n\r\n\r\n    public setTitle(title: boolean){\r\n        console.log('Befor ',this.isTeacher)\r\n        this.isTeacher = title;\r\n        console.log('After ',this.isTeacher)\r\n    }\r\n}\r\n\r\nconst user = new User('WFM','qwe')\r\nconsole.log(user)\r\nconsole.log(user.getAge())\r\n\r\nuser.setTitle(true)\r\nconsole.log(user)\r\n*/\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//Класи , Наслідування класів, Абстрактний клас\r\n/*\r\nclass User{\r\n    name: string; //public\r\n    private isTeacher: boolean;\r\n    protected age: number = 30;\r\n    public job:string;\r\n\r\n    //   constructor(name:string) {\r\n    //      this.name = name;\r\n    //  }\r\n\r\n    constructor(name:string, public job:string) { // public  job:string ==  this.job = job;\r\n        this.name = name;\r\n\r\n    }\r\n\r\n    getAge():number{\r\n        return this.age;\r\n    }\r\n\r\n}\r\n\r\nclass WFM extends User{\r\n    //name: string = 'WFM';\r\n    constructor(job:string){\r\n        super('WFM', job);\r\n        this.age = 100\r\n\r\n    }\r\n}\r\n\r\nabstract class Car {\r\n    model: string;\r\n    year: number = 2010;\r\n\r\n    getCarYear(): number {\r\n        return this.year;\r\n    }\r\n\r\n    abstract logInfo(info: string): void;\r\n}\r\n\r\nclass Mercedes extends Car{\r\n    logInfo(info: string): void {\r\n        console.log(info)\r\n    }\r\n\r\n}\r\n\r\nconst user = new User('WFM','qwe')\r\nconst wfm = new WFM('FrontEnd')\r\nconsole.log(user)\r\nconsole.log(wfm)\r\nconsole.log(wfm.getAge())//100\r\n\r\nconst car = new Mercedes()\r\nconsole.log(car)\r\ncar.logInfo('eqw')\r\nconsole.log(car.getCarYear())\r\n*/\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//Інтерфейси\r\n/*\r\nfunction getLength(variable: any):void {\r\n    console.log(variable.length);\r\n}\r\n\r\ngetLength([1,2,3,4])//4\r\n\r\nconst box = {\r\n    name: 'WFM',\r\n    length: 20\r\n};\r\ngetLength(box)//20 тому що length = 20  якщо length замінити на length1 то буде undefined\r\n//но можна вивести довжину функції\r\nfunction getLengthFix(variable: {length:number}):void {//  {length:number} - обовязково повинно бути таке поле\r\n    console.log(variable.length);\r\n}\r\n\r\ngetLengthFix(box)\r\n\r\n\r\n\r\ninterface ILength {\r\nlength: number;\r\n}\r\nfunction getLengthFixWithInterface(variable: ILength):void {//  {length:number} - обовязково повинно бути таке поле\r\n    console.log(variable.length);\r\n}\r\ngetLengthFixWithInterface([1,2,3])\r\n\r\n\r\ninterface IUser {\r\n    name: string;\r\n    age?: number;\r\n    logInfo(info:string): void;\r\n\r\n}\r\n\r\nconst User:IUser = {\r\n    name: 'QWERTY',\r\n    age: 20,\r\n    logInfo(info: string): void {\r\n\r\n    }\r\n}\r\n\r\ninterface  IGetYear {\r\n    getYear(): number\r\n}\r\nclass User2 implements  IUser, IGetYear{\r\n    getYear(): number {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    age: number;\r\n    name: string;\r\n    job:string;\r\n    newAge:number;\r\n\r\n    logInfo(info: string): void {\r\n        console.log(info)\r\n    }\r\n}*/\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//Загальні типи (generic)\r\n// generic - це просто позначення типів в загальному  вигляді. Ми самі будемо задавати якийсь тип після чого ми будемо працювати з повернутими даними\r\n/*\r\nfunction  getter(data: any) {\r\n    return data;\r\n}\r\n//console.log(getter(100).length)//undefined\r\nconsole.log(getter('qwe').length)\r\n\r\n\r\nfunction genericGetter<T>(data: T): T  {//функція основана на generic | T - generic\r\n    return data;\r\n}\r\n\r\nconsole.log(genericGetter(100))//.length додати не зможе тому що компілятор буде розуміти який тип ми передаємо\r\nconsole.log(genericGetter('qwe').length)\r\nconsole.log(genericGetter<String>('qwe'))\r\nconsole.log(genericGetter<Number>(100).toFixed(2));//toFixed(2) - додаємо крапку і 2 значення після крапки Виведе .00\r\n\r\nconst array: Array<number> = [1,2,3];\r\n\r\nlet newGenericFunction:<T>(data:T) => T = genericGetter;\r\n\r\nclass Multiply<T  extends number| string> { //<T extends number> - наш клас буде працювати тільки з number | <T > - всі типи\r\n    constructor(private a:T, private b:T){\r\n\r\n    }\r\n    public  getResult(): number {\r\n        return +this.a * +this.b;\r\n    }\r\n}\r\n\r\nconst m = new Multiply(10,5)//50\r\nconsole.log(m.getResult())\r\n\r\nconst m = new Multiply<string>('60','40')//50\r\nconsole.log(m.getResult())\r\n\r\n*/\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//Декоратори\r\n/*\r\n// Декоратори - це спеціальна можливість typeScript по добавленню мета-дати в різні класи або функції\r\n// constructor - являється функцією\r\n@log // функцію яку викликаємо. Класс стає невалідним і є можливість того що функціонал класу зміниться\r\n    //в tsconfig.json - треба внести зміни \"experimentalDecorators\": true,\r\n    //Ця функція принімає констректор класу до якого прикріплена\r\n    @shouldLog(true)\r\nclass User {\r\n    constructor(public name: string, public age:number){\r\n        console.log('I am new User')\r\n    }\r\n}\r\n\r\nfunction log(constrFn: Function) {\r\nconsole.log(constrFn)//получаємо і виводимо конструктор в консоль\r\n}\r\n\r\n//для того щоб передати параметри для виконнання функціх\r\nfunction loggger(constrFn: Function) {\r\n    console.log(constrFn)\r\n}\r\nfunction shouldLog(flag:boolean):any{\r\n    return flag ? loggger : null //if(flag === true){logger}else{null}\r\n}\r\nlet user = new User('WFM', 20);\r\nconsole.log(user)\r\n// наступна задача\r\n\r\nfunction addShowAbility(costructorFn: Function) {\r\n    costructorFn.prototype.showHtml = function () {\r\n const  pre = document.createElement('pre');\r\n\r\n pre.innerHTML=JSON.stringify(this)//JSON - обєкт | stringify - метод який перетворює js обєкти в JSON формат(в лінійки) ерші this - це і є юзер\r\n\r\n document.body.append(pre)\r\n    }\r\n}\r\n\r\n@addShowAbility\r\nclass User2 {\r\n    constructor(public name: string, public age:number, public job:string){\r\n        console.log('I am new User')\r\n    }\r\n}\r\n\r\nlet user2 = new User2('WFM', 20, 'Frontend');\r\nconsole.log(user2);\r\n\r\n//user2.showHtml(); // не можемо так записати тому що ми добавляли неявно\r\n//рішення\r\n(<any>user2).showHtml();\r\n*/\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//Namespace\r\n/*\r\nfunction isEmpty(d: any):boolean {\r\n    return !d;\r\n}\r\n\r\nconsole.log(isEmpty(''))//true\r\nconsole.log(isEmpty('qwe'))//fasle\r\n\r\nfunction isUndefined(d: any):boolean {\r\n    return typeof d === 'undefined';\r\n}\r\n\r\nconsole.log(isUndefined(20))//false\r\nconsole.log(isUndefined(undefined))//true\r\nconsole.log(isUndefined(null))//false\r\n\r\nconst PI = Math.PI;\r\nconst EXP = Math.E;\r\n\r\nnamespace Util{//namespace - це локальна сушність яка має в собі певний набір функціоналу\r\n\r\n    export  function isEmptyUtil(d: any):boolean {//локальна видимість за замовчуванням private | отримати функцію можна через export\r\n        return !d;\r\n    }\r\n\r\n\r\n    function isUndefinedUtil(d: any):boolean {\r\n        return typeof d === 'undefined';\r\n    }\r\n\r\n\r\n    const PIUtil = Math.PI;\r\n    const EXPUtil = Math.E;\r\n}\r\n\r\nconsole.log(Util.isEmptyUtil(''))\r\n*/\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//Typescript i webpack\r\n//створемо файл packa\r\n//встановлення WebPack\r\nvar myNumber = 10;\r\nvar numberArray = [10, 20, 30, 40];\r\nfunction log(str) {\r\n    console.log(str);\r\n}\r\nvar User = /** @class */ (function () {\r\n    function User(name, age) {\r\n        this.name = name;\r\n        this.age = age;\r\n    }\r\n    return User;\r\n}());\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsNEJBQTRCO0FBQzVCLGdKQUFnSjtBQUNoSixZQUFZO0FBQ1osUUFBUTtBQUNSOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBa0NFO0FBQ0YsZ0pBQWdKO0FBQ2hKLHVCQUF1QjtBQUN2Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFvQkU7QUFDRixnSkFBZ0o7QUFDaEosU0FBUztBQUNULHNHQUFzRztBQUN0Rzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBbURFO0FBQ0YsZ0pBQWdKO0FBQ2hKLFFBQVE7QUFDUjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQTJDRTtBQUNGLGdKQUFnSjtBQUNoSiwyQkFBMkI7QUFDM0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztlQXFCZTtBQUVmLGdKQUFnSjtBQUNoSix1QkFBdUI7QUFDdkI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBZ0NFO0FBQ0YsZ0pBQWdKO0FBQ2hKLE9BQU87QUFDUCxtQ0FBbUM7QUFDbkM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFrQ0U7QUFFRixnSkFBZ0o7QUFDaEosK0NBQStDO0FBQy9DOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQTJERTtBQUNGLGdKQUFnSjtBQUNoSixZQUFZO0FBQ1o7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQTRERztBQUNILGdKQUFnSjtBQUNoSix5QkFBeUI7QUFDekIscUpBQXFKO0FBQ3JKOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFvQ0U7QUFFRixnSkFBZ0o7QUFDaEosWUFBWTtBQUNaOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFtREU7QUFDRixnSkFBZ0o7QUFDaEosV0FBVztBQUNYOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFvQ0U7QUFDRixnSkFBZ0o7QUFDaEosc0JBQXNCO0FBQ3RCLHFCQUFxQjtBQUNyQixzQkFBc0I7QUFFdEIsSUFBTyxRQUFRLEdBQVcsRUFBRSxDQUFDO0FBQzdCLElBQU0sV0FBVyxHQUFhLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLENBQUE7QUFFM0MsU0FBUyxHQUFHLENBQUMsR0FBVztJQUNwQixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFBO0FBQ3BCLENBQUM7QUFFRDtJQUNJLGNBQW9CLElBQVksRUFBVSxHQUFXO1FBQWpDLFNBQUksR0FBSixJQUFJLENBQVE7UUFBVSxRQUFHLEdBQUgsR0FBRyxDQUFRO0lBRXJELENBQUM7SUFDTCxXQUFDO0FBQUQsQ0FBQyxBQUpELElBSUMifQ=="],"sourceRoot":""}